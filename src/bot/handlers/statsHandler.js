import fs from 'fs';
import path from 'path';
import { getStats } from '../../services/db.js';

export async function statsHandler(ctx) {
    try {
        const userId = ctx.from.id;
        const stats = await getStats(userId);

        let message = 'üìä *–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è*\n\n';

        if (stats.length === 0) {
            message += '–í—ã –µ—â–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –Ω–∏–∫–∞–∫–∏–µ —Å–µ—Ä–≤–∏—Å—ã.';
        } else {
            const serviceMap = {
                'instagram': 'üì∏ Instagram',
                'tiktok': 'üéµ TikTok',
                'task': '‚úÖ –ó–∞–¥–∞—á–∏'
            };

            stats.forEach(stat => {
                const serviceName = serviceMap[stat.service] || stat.service;
                message += `${serviceName}: *${stat.usage_count}*\n`;
            });
        }

        const imagePath = path.resolve('src/assets/images/yukiTele.png');

        await ctx.replyWithPhoto(
            { source: fs.readFileSync(imagePath) },
            {
                caption: message,
                parse_mode: 'Markdown'
            }
        );

    } catch (error) {
        console.error('[StatsHandler Error]', error);
        await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.');
    }
}
